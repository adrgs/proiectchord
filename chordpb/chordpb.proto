syntax = "proto3";

option go_package = "github.com/adrgs/proiectchord/chordpb";

package chordpb;

service ChordService {
    rpc FindSuccessor(Id) returns (Node);
    rpc FindPredecessor(Id) returns (Node);
    rpc ClosestPrecedingFinger(Id) returns (Node);

    rpc Notify(Node) returns (Nil);

    rpc UpdateFingerTable(UFTRequest) returns (Nil);

    rpc GetSuccessor(Nil) returns (Node);
    rpc GetPredecessor(Nil) returns (Node);

    rpc SetSuccessor(Node) returns (Nil);
    rpc SetPredecessor(Node) returns (Nil);

    rpc Get(GetRequest) returns (GetReply);
    rpc Store(StoreRequest) returns (Nil);
    rpc GetFile(GetFileRequest) returns (GetFileRequest);
    rpc StoreFile(StoreFileRequest) returns (Nil);
}

message Node {
    int64 id = 1;
    string ip = 2;
}

message Nil {}

message UFTRequest {
    Node node = 1;
    int64 idx = 2;
}

message Id {
    int64 id = 1;
}

message GetRequest {
    string key = 1;
}

message GetReply {
    string value = 1;
}

message StoreRequest {
    string key = 1;
    string value = 2;
}

message GetFileRequest {
    string path = 1;
}

message GetFileReply {
    bytes data = 1;
}

message StoreFileRequest {
    string path = 1;
    bytes data = 2;
}